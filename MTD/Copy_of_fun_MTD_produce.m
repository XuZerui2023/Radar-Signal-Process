% FUN_MTD_PRODUCE - 执行完整的MTD（动目标检测）处理流程
%
% 本函数是一个处理链的封装，它接收一个PRT（脉冲重复时间）的回波数据，
% 依次执行脉冲压缩、FFT多普勒处理和杂波抑制，最终输出一个速度-距离二维矩阵。
%
% 输入参数:
%   echo - (prtNum x point_prt) 原始回波数据矩阵。
%
% 输出参数:
%   MTD_Signal - (prtNum x point_prt_processed) 经过MTD处理后的速度-距离矩阵。即 R-D 图

function MTD_Signal = fun_MTD_produce(echoData, params)
%% 1.参数传递
% 1.1 控制与调试开关
%((abs(V)<1)||(R<5))如果速度太小或距离太近就不仿真了，当作背景杂波
% 只在这里控制是否画图
show_PC = params.Sig_Config.debug.show_PC;   % 脉冲压缩结果显示
show_FFT = params.Sig_Config.debug.show_FFT; % 速度维显示
graph = params.Sig_Config.debug.graph;       % 是否画图 
         
% 2.2 常数与单位定义
cj = sqrt(-1);
c = 2.99792458e8;           % 电磁波传播速度
PI2 = 2*pi;
us  = 1e-6;                 % time unit(us)
ns  = 1e-9;                 % time unit(ns)
MHz = 1e+6;                 % frequency unit(MHz)
KHz = 1e+3;                 % frequency unit(KHz)
GHz = 1e+9;                 % frequency unit(GHz)
fileTotalNums = 380;        % 数据bin文件个数 19*20=380
framesEachFile = 10;        % 每个新文件存储的帧数10个332PRT

% 2.3 雷达系统参数
prt   = params.Sig_Config.prt;             % X波段雷达PRT
prf   = params.Sig_Config.prf;
prtNum = params.Sig_Config.prtNum;         % 每帧信号的脉冲数
fs = params.Sig_Config.fs;                 % 生成原始信号的采样频率，每秒25,000,000次采样
ts = 1/fs;                      % 采样时间间隔
deltaR = params.Sig_Config.deltaR;         % 距离分辨率单元

f0 = 0*MHz;                     % 中心频率
fc = params.Sig_Config.fc;                 % X波段雷达中心频率
wavelength = params.Sig_Config.wavelength; % 信号波长

B = params.Sig_Config.B;                   % 带宽
tao1  = params.Sig_Config.tao(1);          % 脉冲1脉宽
tao2  = params.Sig_Config.tao(2);          % 脉冲2脉宽
tao3  = params.Sig_Config.tao(3);          % 脉冲3脉宽
K1    = params.Sig_Config.K1;              % 短脉冲调频斜率（简单脉冲不需要）
K2    = params.Sig_Config.K2;              % 中脉冲负线性调频斜率
K3    = params.Sig_Config.K3;              % 长脉冲线性调频斜率

point_prt  = params.Sig_Config.point_prt(1); % 总PRT采集点数
point_prt1 = params.Sig_Config.point_prt(2); % 1脉冲区间点数
point_prt2 = params.Sig_Config.point_prt(3); % 2脉冲区间点数 
point_prt3 = params.Sig_Config.point_prt(4); % 3脉冲区间点数

%% 2.生成用于脉冲压缩的发射参考信号

% 画出chirp信号时域波形
t1 = -tao1/2 : ts : tao1/2-ts;  % 时间变量
t2 = -tao2/2 : ts : tao2/2-ts;  
t3 = -tao3/2 : ts : tao3/2-ts; 
t123 = linspace(0,prt,point_prt);

% 理想仿真情况
pulse1 = sin(2*pi*t1+pi/2);                     % 窄脉冲：简单脉冲   4个点
pulse2 = exp(cj*2*pi*(f0*t2+0.5*K2*(t2.^2)));   % 中脉冲：负线性调频 200个点
pulse3 = exp(cj*2*pi*(f0*t3+0.5*K3*(t3.^2)));   % 长脉冲：正线性调频 700个点

% 手动输入实际情况，目前未知
%pulse2_real = [8.73485e-18 ,-0.0124099 ,-0.0104873 ,0.00915782 ,0.0237637 ,0.0113691 ,-0.0197015 ,-0.0368711 ,-0.0181063 ,0.0238755 ,0.0526078 ,0.0408238 ,-0.00647206 ,-0.0568911 ,-0.0755893 ,-0.0487868 ,0.00971216 ,0.0695179 ,0.101737 ,0.0925585 ,0.0466803 ,-0.0181685 ,-0.0805229 ,-0.123282 ,-0.137906 ,-0.124546 ,-0.0895256 ,-0.0419417 ,0.0092644 ,0.0571391 ,0.097408 ,0.128325 ,0.150067 ,0.163996 ,0.172 ,0.175996 ,0.17761 ,0.177992 ,0.177734 ,0.17684 ,0.174725 ,0.17026 ,0.16186 ,0.147675 ,0.125902 ,0.0952795 ,0.0557189 ,0.00900592 ,-0.0406418 ,-0.0864689 ,-0.119894 ,-0.132301 ,-0.117856 ,-0.0767001 ,-0.0172411 ,0.0441251 ,0.0871372 ,0.095372 ,0.0648793 ,0.00902167 ,-0.0450937 ,-0.0694989 ,-0.0520121 ,-0.00588109 ,0.0368519 ,0.0471478 ,0.0212279 ,-0.0159561 ,-0.0321687 ,-0.0169928 ,0.00967583 ,0.0199053 ,0.00752329 ,-0.00840642 ,-0.00962958];
%pulse2_imag = [-0.010182 ,-0.00426338 ,0.0125694 ,0.0176974 ,-0.00109573 ,-0.0255354 ,-0.0257313 ,0.00450108 ,0.0380632 ,0.0409565 ,0.00552931 ,-0.0420387 ,-0.0641617 ,-0.041699 ,0.0131109 ,0.0671493 ,0.0888244 ,0.0658318 ,0.00897237 ,-0.0565867 ,-0.104846 ,-0.119569 ,-0.0981699 ,-0.0494093 ,0.0121622 ,0.0719068 ,0.118977 ,0.147825 ,0.157798 ,0.151695 ,0.134071 ,0.109833 ,0.0833203 ,0.0578807 ,0.0358073 ,0.0184979 ,0.0066989 ,0.000745574 ,0.000744496 ,0.00666986 ,0.0183643 ,0.0354451 ,0.0571271 ,0.0819922 ,0.107759 ,0.131141 ,0.147924 ,0.153396 ,0.143243 ,0.114915 ,0.0692207 ,0.0116679 ,-0.0472347 ,-0.0935092 ,-0.113466 ,-0.0991065 ,-0.0532723 ,0.00841107 ,0.0614392 ,0.0825094 ,0.0620661 ,0.0120545 ,-0.0381229 ,-0.058303 ,-0.0379486 ,0.00495544 ,0.0364146 ,0.0335431 ,0.00392703 ,-0.0221936 ,-0.0217323 ,-0.000917822 ,0.0145387 ,0.0100754 ,-0.00330821];
%pulse2 = pulse2_real+1j*pulse2_imag; % 75个点

%pulse3_real = [0.00347321 ,0.00769471 ,0.00119518 ,-0.00865314 ,-0.00821249 ,0.00383747 ,0.0130384 ,0.00670282 ,-0.00935889 ,-0.0164105 ,-0.00467536 ,0.0143311 ,0.0196654 ,0.00388581 ,-0.0181421 ,-0.0239369 ,-0.00612985 ,0.0197439 ,0.0296144 ,0.0131487 ,-0.0167403 ,-0.0350039 ,-0.0256129 ,0.0053683 ,0.0347717 ,0.0402595 ,0.0167782 ,-0.0202684 ,-0.0461937 ,-0.0436764 ,-0.0135048 ,0.0267132 ,0.0537673 ,0.0523094 ,0.0227437 ,-0.0199996 ,-0.0549552 ,-0.0656411 ,-0.0472785 ,-0.00790095 ,0.0361765 ,0.0676954 ,0.0751575 ,0.0564085 ,0.0183415 ,-0.0264459 ,-0.0643147 ,-0.0847896 ,-0.083097 ,-0.0606393 ,-0.0237243 ,0.0187109 ,0.0575581 ,0.0855287 ,0.0983183 ,0.0948924 ,0.0770564 ,0.0485885 ,0.0142245 ,-0.0212723 ,-0.0538106 ,-0.0803855 ,-0.0992217 ,-0.109702 ,-0.11216 ,-0.107604 ,-0.0974397 ,-0.0832246 ,-0.0664766 ,-0.0485472 ,-0.0305497 ,-0.013335 ,0.00249855 ,0.0165738 ,0.0286919 ,0.0387858 ,0.0468762 ,0.0530328 ,0.0573421 ,0.0598832 ,0.060711 ,0.0598457 ,0.0572702 ,0.0529331 ,0.0467587 ,0.0386642 ,0.0285839 ,0.016501 ,0.002486 ,-0.0132596 ,-0.0303575 ,-0.0482109 ,-0.0659736 ,-0.0825414 ,-0.096577 ,-0.106581 ,-0.111021 ,-0.108516 ,-0.0980836 ,-0.07941 ,-0.0531215 ,-0.0209855 ,0.014023 ,0.0478671 ,0.0758589 ,0.0933513 ,0.096652 ,0.084018 ,0.0564998 ,0.0183531 ,-0.0232531 ,-0.0593895 ,-0.0813211 ,-0.082912 ,-0.0628401 ,-0.0258185 ,0.0178915 ,0.0549782 ,0.0731889 ,0.0658645 ,0.0351666 ,-0.00767338 ,-0.0458739 ,-0.0636303 ,-0.0532198 ,-0.0193486 ,0.0219808 ,0.0505018 ,0.0518531 ,0.0257335 ,-0.0129946 ,-0.0419767 ,-0.0443417 ,-0.0194313 ,0.0160642 ,0.0384939 ,0.0332 ,0.00511814 ,-0.024382 ,-0.0332687 ,-0.0158839 ,0.0124542 ,0.0279986 ,0.0186306 ,-0.00577235 ,-0.022492 ,-0.0170077 ,0.00363389 ,0.018342 ,0.013329 ,-0.00433515 ,-0.015166 ,-0.00861794 ,0.00614772 ,0.0119063 ,0.00348724 ,-0.00742221 ,-0.00777207 ,0.00106588 ,0.00680575];
%pulse3_imag = [-0.00601577 ,0.0015725 ,0.00872502 ,0.00461064 ,-0.00708884 ,-0.0113048 ,-0.000957481 ,0.0125797 ,0.0123299 ,-0.00335368 ,-0.0174487 ,-0.0131091 ,0.00684821 ,0.0219256 ,0.0153313 ,-0.00812548 ,-0.0261348 ,-0.0204812 ,0.00532846 ,0.028919 ,0.0289951 ,0.00395725 ,-0.0267089 ,-0.0384408 ,-0.0210585 ,0.0136663 ,0.0411138 ,0.0416486 ,0.0139467 ,-0.0247613 ,-0.0504005 ,-0.0471194 ,-0.0162333 ,0.0254565 ,0.0557316 ,0.0589169 ,0.0332821 ,-0.00916684 ,-0.0493015 ,-0.0698879 ,-0.0626595 ,-0.0307793 ,0.013523 ,0.054378 ,0.0781994 ,0.0779072 ,0.0543502 ,0.015027 ,-0.0289374 ,-0.0662922 ,-0.0885401 ,-0.0915578 ,-0.07583 ,-0.0455722 ,-0.00722005 ,0.0322116 ,0.0665133 ,0.0911896 ,0.103841 ,0.104092 ,0.0932026 ,0.0735308 ,0.0479656 ,0.0194422 ,-0.00941832 ,-0.0365266 ,-0.0604152 ,-0.0802288 ,-0.0956473 ,-0.106774 ,-0.114013 ,-0.117955 ,-0.119279 ,-0.11868 ,-0.116812 ,-0.114259 ,-0.111514 ,-0.108975 ,-0.106943 ,-0.105628 ,-0.105155 ,-0.105562 ,-0.106809 ,-0.10877 ,-0.111235 ,-0.113901 ,-0.116373 ,-0.118159 ,-0.11868 ,-0.117288 ,-0.113296 ,-0.106034 ,-0.0949235 ,-0.0795702 ,-0.0598803 ,-0.0361795 ,-0.00932269 ,0.019232 ,0.0474155 ,0.0726385 ,0.0920092 ,0.102688 ,0.102371 ,0.0898357 ,0.0654796 ,0.0316885 ,-0.00709768 ,-0.0447673 ,-0.0744358 ,-0.0898073 ,-0.0867818 ,-0.0649259 ,-0.028319 ,0.0146942 ,0.053104 ,0.076059 ,0.076281 ,0.0529992 ,0.0131688 ,-0.0299468 ,-0.0609103 ,-0.067875 ,-0.0478369 ,-0.00888603 ,0.032231 ,0.0569993 ,0.0538624 ,0.0245768 ,-0.0156554 ,-0.0453913 ,-0.0484963 ,-0.0237976 ,0.0133876 ,0.0399284 ,0.0393641 ,0.0130669 ,-0.0201066 ,-0.0366495 ,-0.0254254 ,0.00376108 ,0.0275117 ,0.0273915 ,0.00503775 ,-0.0193262 ,-0.0246105 ,-0.007635 ,0.0143726 ,0.0205041 ,0.00638737 ,-0.0121924 ,-0.016179 ,-0.00309935 ,0.0113537 ,0.0115379 ,-0.000874347 ,-0.0102731 ,-0.00640668 ,0.00414119 ,0.00778108 ,0.00139083];
%pulse3 = pulse3_real+1j*pulse3_imag; % 160个点

%% 3.ISTC 调制补偿
% [stc_cure, echo] = fun_iSTC(echo); % 缺失数据


%% 4.脉冲压缩

[Echo_0] = fun_lss_pulse_compression(echoData,params,show_PC, pulse1, pulse2, pulse3,point_prt1,point_prt2,point_prt3);   % (1536，1031)

% 删除重复的区间
% Echo_0=fun_lss_range_concate(prtNum,Echo_0);%(1536,868)


% point_prt长度改变了
[~,point_prt] = size(Echo_0);


%% 5.MTD (多普勒处理)
[m,n] = size(Echo_0);
MTD_Signal = fun_Process_MTD(Echo_0, n, m); % 做MTD，多普勒处理


%% 6.杂波抑制
MTD_Signal = fun_0v_pressing(MTD_Signal, params);   % 0速抑制，压制0速附近一定区域的峰值


%% 7. 调试与可视化
if(show_FFT==1)
    for i=1:point_prt
        figure(1);
        plot(20*log10(abs(MTD_Signal(:,i)))),title('FFT');

        pause(0.05);
    end
end

%% 8.画出MTD三维图
if(graph==1)
    
    R_range = [500,4000];
    V_range = [-20,20];
    R_range_point = round(R_range/6);
    V_range_point = [691,845];
    
    figure(8);
    R_point = 6;%两点间距6m
    r0 = 0:R_point:point_prt*R_point-R_point;%距离轴
    fd = linspace(-prf/2,prf/2,prtNum);
    v0 = fd*wavelength/2;%速度轴
    MTD_Signal_simu_log = 20*log10(abs(MTD_Signal)/max(max(abs(MTD_Signal))));
    mesh(r0,v0,MTD_Signal_simu_log);
    xlabel('距离');
    ylabel('速度m/s');
    zlabel('幅度dB');
    title('0波束仿真信号MTD');
    xlim(R_range);
    ylim(V_range);
    
    MTD_local = MTD_Signal_simu_log(V_range_point(1) : V_range_point(2),R_range_point(1) : R_range_point(2));
    r0_local = r0(R_range_point(1) : R_range_point(2));
    v0_local = v0(V_range_point(1) : V_range_point(2));
    

%     % 画出速度维
%     MTD_max=max(max(MTD_local));
%     [vindex,rindex]=find(MTD_local(:,:)==MTD_max);
% 
%     figure(9);
%     plot(v0_local,(MTD_local(:,rindex))),xlabel('速度m/s'),ylabel('幅度dB');title('速度维');
%     
% 
%     
%     % 画出距离维
%     figure(11);
%     plot(r0_local,(MTD_local(vindex,:))),xlabel('距离'),ylabel('幅度dB');title('距离维');

    
end

end

